{"version":3,"file":"static/js/667.637b4cc5.chunk.js","mappings":"sPACA,EAA6B,yB,yBCMd,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAeP,GAFxB,OAERQ,EAFQ,OAGdJ,EAAQI,GAHM,gDAKdC,QAAQC,MAAR,MALc,yDAAH,qDASfJ,GACD,GAAE,CAACN,KAGF,gBAAIW,UAAWC,EAAf,WACE,iCACCT,EAAKU,KAAI,SAAAC,GAAE,OACV,SAAC,KAAD,CAAMC,GAAE,kBAAaf,EAAb,SAAR,UACE,2BACE,gBAAKgB,IAAKC,EAAAA,GAAYH,EAAGI,aAAcC,IAAKL,EAAGM,QAC/C,uBAAIN,EAAGM,SAFAN,EAAGO,KAD4BrB,EADhC,MAUjB,C,uGCrCD,IAAMsB,EAAU,mCACVC,EAAW,+BACXN,EAAY,iC,yKCEX,SAAeO,IAAtB,4CAAO,OAAP,oBAAO,+GAEeC,EAAAA,EAAAA,IAAA,UACbF,EAAAA,GADa,qCACwBD,EAAAA,KAHvC,cAEGI,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,4DATC,qFAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6B7B,GAA7B,kGAEeyB,EAAAA,EAAAA,IAAA,UACbF,EAAAA,GADa,kBACKvB,EADL,oBACwBsB,EAAAA,GADxB,oBAFf,cAEGI,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,0DATC,qFA2BA,IAAMrB,EAAc,mCAAG,WAAMP,GAAN,uFACLyB,EAAAA,EAAAA,IAAA,UAClBF,EAAAA,GADkB,kBACAvB,EADA,4BAC2BsB,EAAAA,GAD3B,oBADK,cACtBd,EADsB,yBAIrBA,EAASmB,KAAKxB,MAJO,2CAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast.module.css?f72c","components/Cast.js","utils/constants.js","utils/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorsList\":\"Cast_actorsList__8T1C5\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { IMAGE_URL } from '../utils/constants';\nimport css from './Cast.module.css';\nimport { Link } from 'react-router-dom';\nimport { fetchMovieCast } from 'utils/requests';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchMovieCast(movieId);\n        setCast(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [movieId]);\n\n  return (\n    <ul className={css.actorsList}>\n      <h2>cast</h2>\n      {cast.map(el => (\n        <Link to={`/movies/${movieId}/cast`} key={movieId}>\n          <li key={el.id}>\n            <img src={IMAGE_URL + el.profile_path} alt={el.name} />\n            <p>{el.name}</p>\n          </li>\n        </Link>\n      ))}\n    </ul>\n  );\n}\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch trending movies. Please try again later.'\n    );\n    throw error;\n  }\n}\n\nexport async function fetchMoviesId(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie details. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport async function fetchMovieSearch(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return res.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie search results. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport const fetchMovieCast = async movieId => {\n  const response = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n"],"names":["Cast","movieId","useParams","useState","cast","setCast","useEffect","movieCast","fetchMovieCast","response","console","error","className","css","map","el","to","src","IMAGE_URL","profile_path","alt","name","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","res","data","Notiflix","fetchMoviesId"],"sourceRoot":""}