{"version":3,"file":"static/js/71.414ed8b6.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsContent/MovieDetailsContent.module.css?742d","components/MovieDetailsContent/MovieDetailsContent.js","pages/MovieDetails.js","utils/constants.js","utils/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"Button_buttonContainer__X5AJ-\",\"button\":\"Button_button__wiIYs\"};","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport css from './Button.module.css';\n\nexport default function GoBackButton() {\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className={css.buttonContainer}>\n      <button className={css.button} type=\"button\" onClick={handleGoBack}>\n        <span>&larr;</span>GO BACK\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filmContainer\":\"MovieDetailsContent_filmContainer__py7Z9\",\"detailsContainer\":\"MovieDetailsContent_detailsContainer__Kn0O4\",\"title\":\"MovieDetailsContent_title__NsrO4\",\"textCategory\":\"MovieDetailsContent_textCategory__nwxAc\",\"text\":\"MovieDetailsContent_text__d2e5X\",\"imageContainer\":\"MovieDetailsContent_imageContainer__VypPA\",\"image\":\"MovieDetailsContent_image__LefFm\",\"navContainer\":\"MovieDetailsContent_navContainer__oQs37\",\"navCategory\":\"MovieDetailsContent_navCategory__jWLRr\"};","import { NavLink } from 'react-router-dom';\nimport { IMAGE_URL } from 'utils/constants';\nimport css from '../MovieDetailsContent/MovieDetailsContent.module.css';\nimport Button from '../Button/Button';\n\nconst MovieDetailsContent = ({ movie, movieId, locationValue }) => {\n  const defaultImg =\n    'https://upload.wikimedia.org/wikipedia/commons/c/c2/No_image_poster.png';\n  return (\n    <>\n      <Button />\n      {movie && (\n        <div className={css.mainContainer}>\n          <div className={css.filmContainer}>\n            <div className={css.imageContainer}>\n              <img\n                className={css.image}\n                src={\n                  movie.poster_path ? IMAGE_URL + movie.poster_path : defaultImg\n                }\n                alt={movie.title}\n              />\n            </div>\n\n            <div className={css.detailsContainer}>\n              <h2 className={css.title}>\n                {movie.title || movie.name || movie.original_title}\n              </h2>\n              <p className={css.text}>\n                <span className={css.textCategory}>Rating: </span>\n                {movie.vote_average.toFixed(1)}\n              </p>\n              <p className={css.text}>\n                <span className={css.textCategory}>Overview: </span>\n                {movie.overview}\n              </p>\n              <p className={css.text}>\n                <span className={css.textCategory}>Genres: </span>\n                {movie.genres.map(genre => genre.name).join(' ')}\n              </p>\n              <div className={css.additionalContainer}>\n                <h3 className={css.title}>Additional information</h3>\n\n                <nav className={css.navContainer}>\n                  <NavLink\n                    className={css.navCategory}\n                    to={{\n                      pathname: `/movies/${movieId}/cast`,\n                      state: { from: locationValue },\n                    }}\n                  >\n                    Cast\n                  </NavLink>\n\n                  <NavLink\n                    className={css.navCategory}\n                    to={{\n                      pathname: `/movies/${movieId}/reviews`,\n                      state: { from: locationValue },\n                    }}\n                  >\n                    Reviews\n                  </NavLink>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsContent;\n","import { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { fetchMoviesId } from 'utils/requests';\nimport MovieDetailsContent from 'components/MovieDetailsContent/MovieDetailsContent';\n\nexport default function MovieDetails() {\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  let locationValue = location.state;\n  if (location.state) {\n    locationValue = location.state.from;\n  }\n\n  useEffect(() => {\n    fetchMoviesId(movieId).then(movie => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      <div>\n        <MovieDetailsContent\n          movie={movie}\n          locationValue={locationValue}\n          movieId={movieId}\n        />\n      </div>\n    </>\n  );\n}\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch trending movies. Please try again later.'\n    );\n    throw error;\n  }\n}\n\nexport async function fetchMoviesId(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie details. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport async function fetchMovieSearch(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return res.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie search results. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport const fetchMovieCast = async movieId => {\n  try {\n    console.log('Fetching movie cast for movieId:', movieId);\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log('Response from API:', response);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    Notiflix.Notify.failure(\n      'Failed to fetch movie cast. Please try again later.'\n    );\n    throw error;\n  }\n};\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n"],"names":["GoBackButton","navigate","useNavigate","className","css","type","onClick","movie","movieId","locationValue","Button","src","poster_path","IMAGE_URL","alt","title","name","original_title","vote_average","toFixed","overview","genres","map","genre","join","to","pathname","state","from","MovieDetails","location","useLocation","useParams","useState","setMovie","useEffect","fetchMoviesId","then","API_KEY","BASE_URL","fetchTrendingMovies","axios","res","data","Notiflix","fetchMovieCast","console","log","response","cast","error","fetchMovieReviews","fetch","json"],"sourceRoot":""}