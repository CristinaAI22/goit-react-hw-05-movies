{"version":3,"file":"static/js/238.4e2c273b.chunk.js","mappings":"2OACA,EAA4B,yCAA5B,EAAoF,4CAApF,EAAmJ,gDAAnJ,EAA2M,qC,SC+B3M,EA5B8B,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACzBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,eAAID,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAK,OACf,eAAIH,UAAWC,EAAf,UACE,UAAC,KAAD,CACEG,GAAI,CACFC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMV,IAHnB,WAME,gBACEW,IAAKC,EAAAA,GAAYP,EAAMQ,YACvBC,IAAKT,EAAMU,MACXC,MAAO,OAET,cAAGd,UAAWC,EAAd,SACGE,EAAMU,OAASV,EAAMY,MAAQZ,EAAMa,qBAbAb,EAAMG,GADjC,OAsBxB,EC9BD,GAAgB,MAAQ,oBAAoB,mBAAqB,iCAAiC,UAAY,yBCI/F,SAASW,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOrB,EAAP,KAAesB,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAAO,OAAIJ,EAAUI,EAAQC,QAAtB,GACnC,GAAE,KAGD,iBAAKxB,UAAWC,EAAAA,UAAhB,WACE,gBAAKD,UAAWC,EAAAA,mBAAhB,UACE,eAAID,UAAWC,EAAAA,eAEjB,eAAID,UAAWC,EAAAA,MAAf,2BACA,SAAC,EAAD,CAAuBJ,OAAQA,MAGpC,C,uGCrBD,IAAM4B,EAAU,mCACVC,EAAW,+BACXhB,EAAY,iC,yKCEX,SAAeW,IAAtB,4CAAO,OAAP,oBAAO,+GAEeM,EAAAA,EAAAA,IAAA,UACbD,EAAAA,GADa,qCACwBD,EAAAA,KAHvC,cAEGG,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,4DATC,qFAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,kGAEeL,EAAAA,EAAAA,IAAA,UACbD,EAAAA,GADa,kBACKM,EADL,oBACwBP,EAAAA,GADxB,oBAFf,cAEGG,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,0DATC,qFA2BA,IAAMG,EAAc,mCAAG,WAAMD,GAAN,uFAE1BE,QAAQC,IAAI,mCAAoCH,GAFtB,SAGHL,EAAAA,EAAAA,IAAA,UAClBD,EAAAA,GADkB,kBACAM,EADA,4BAC2BP,EAAAA,GAD3B,oBAHG,cAGpBW,EAHoB,OAM1BF,QAAQC,IAAI,qBAAsBC,GANR,kBAOnBA,EAASP,KAAKQ,MAPK,sCAS1BH,QAAQI,MAAM,6BAAd,MACAR,IAAAA,OAAAA,QACE,uDAXwB,8DAAH,qD","sources":["webpack://goit-react-hw-05-movies/./src/components/TrendingMoviesGallery/TrendingMoviesGallery.module.css?6fa5","components/TrendingMoviesGallery/TrendingMoviesGallery.js","webpack://goit-react-hw-05-movies/./src/pages/Home.module.css?8f25","pages/Home.js","utils/constants.js","utils/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TrendingMoviesGallery_container__hoLtl\",\"trendingList\":\"TrendingMoviesGallery_trendingList__jhzT-\",\"trendingListItem\":\"TrendingMoviesGallery_trendingListItem__zE-dG\",\"title\":\"TrendingMoviesGallery_title__BzBEc\"};","import { Link, useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from 'utils/constants';\nimport css from '../TrendingMoviesGallery/TrendingMoviesGallery.module.css';\n\nconst TrendingMoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div className={css.container}>\n      <ul className={css.trendingList}>\n        {movies.map(movie => (\n          <li className={css.trendingListItem} key={movie.id}>\n            <Link\n              to={{\n                pathname: `/movies/${movie.id}`,\n                state: { from: location },\n              }}\n            >\n              <img\n                src={IMAGE_URL + movie.poster_path}\n                alt={movie.title}\n                width={450}\n              />\n              <p className={css.title}>\n                {movie.title || movie.name || movie.original_title}\n              </p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\nexport default TrendingMoviesGallery;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Home_title__qAdt+\",\"breakLineContainer\":\"Home_breakLineContainer__sPFKr\",\"breakLine\":\"Home_breakLine__eNoVz\"};","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'utils/requests';\nimport TrendingMoviesGallery from '../components/TrendingMoviesGallery/TrendingMoviesGallery';\nimport css from './Home.module.css';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(request => setMovies(request.results));\n  }, []);\n\n  return (\n    <div className={css.container}>\n      <div className={css.breakLineContainer}>\n        <hr className={css.breakLine}></hr>\n      </div>\n      <h1 className={css.title}>Trending now</h1>\n      <TrendingMoviesGallery movies={movies} />\n    </div>\n  );\n}\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch trending movies. Please try again later.'\n    );\n    throw error;\n  }\n}\n\nexport async function fetchMoviesId(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie details. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport async function fetchMovieSearch(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return res.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie search results. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport const fetchMovieCast = async movieId => {\n  try {\n    console.log('Fetching movie cast for movieId:', movieId);\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log('Response from API:', response);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    Notiflix.Notify.failure(\n      'Failed to fetch movie cast. Please try again later.'\n    );\n    throw error;\n  }\n};\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n"],"names":["movies","location","useLocation","className","css","map","movie","to","pathname","id","state","from","src","IMAGE_URL","poster_path","alt","title","width","name","original_title","Home","useState","setMovies","useEffect","fetchTrendingMovies","then","request","results","API_KEY","BASE_URL","axios","res","data","Notiflix","fetchMoviesId","movieId","fetchMovieCast","console","log","response","cast","error"],"sourceRoot":""}