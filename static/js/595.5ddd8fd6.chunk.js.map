{"version":3,"file":"static/js/595.5ddd8fd6.chunk.js","mappings":"0RACA,EAAkC,gCAAlC,EAA+E,2BAA/E,EAA4H,gCAA5H,EAAiO,iCAAjO,EAA0R,sCAA1R,EAAgV,8BAAhV,EAA2X,2BAA3X,EAA8Z,sBAA9Z,EAA6b,uB,SCItb,SAASA,IACd,OAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MA2BjB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,0FACdP,EADc,0CAGSQ,MAAM,GAAD,OACvBC,EAAAA,GADuB,kEAC2CT,EAD3C,oBACkEU,EAAAA,KAJhF,cAGRC,EAHQ,gBAMKA,EAASC,OANd,OAMRC,EANQ,OAOdV,EAAUU,EAAKC,SAPD,kDASdC,QAAQC,MAAM,yBAAd,MATc,gCAYhBb,EAAU,IAZM,0DAAH,qDAgBjBI,GACD,GAAE,CAACP,KAGF,4BACE,gBAAKiB,UAAWC,EAAhB,UACE,kBAAMD,UAAWC,EAAgBC,SA5BlB,SAAAC,GACnBA,EAAMC,iBACNjB,EAAS,kBAAD,OAAmBJ,GAC5B,EAyBK,WACE,kBACEiB,UAAWC,EACXI,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAAAC,GAAC,OAAIxB,EAAewB,EAAEC,OAAOH,MAA5B,EACXI,YAAY,2BAEd,mBAAQV,UAAWC,EAAsBI,KAAK,SAA9C,UACE,iBAAML,UAAWC,EAAjB,4BAIN,gBAAKD,UAAWC,EAAhB,SACGhB,EAAO0B,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACE,iBAAKd,UAAWC,EAAhB,WACE,gBACEc,IAAKC,EAAAA,GAAYJ,EAAMK,YACvBC,IAAKN,EAAMO,MACXC,MAAO,OAET,eAAIpB,UAAWC,EAAf,SACGW,EAAMO,OAASP,EAAMS,MAAQT,EAAMU,kBAEtC,eAAGtB,UAAWC,EAAd,WACE,uCACCW,EAAMW,aAAaC,QAAQ,UAZIZ,EAAME,GAD7B,QAqBxB,CAED,O,uGC3EA,IAAMrB,EAAU,mCACVD,EAAW,+BACXwB,EAAY,iC,sBCFlB,SAASS,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChB1B,EAAQ2B,EAAK3B,KAInB,CAHE,MAAOP,GAEP,YADA6B,EAAO7B,EAET,CAEIkC,EAAKC,KACPP,EAAQrB,GAER6B,QAAQR,QAAQrB,GAAO8B,KAAKP,EAAOC,EAEvC,CAEe,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUR,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMvB,GACbmB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQxB,EAClE,CAEA,SAASwB,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,EACnE,CAEAf,OAAMgB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Movies.module.css?d157","pages/Movies.js","utils/constants.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchContainer\":\"Movies_searchContainer__Y+Eq0\",\"searchForm\":\"Movies_searchForm__H4jJ4\",\"searchFormInput\":\"Movies_searchFormInput__U6GMk\",\"SearchFormInput\":\"Movies_SearchFormInput__bFrPB\",\"searchFormButton\":\"Movies_searchFormButton__Y67LZ\",\"searchFormButtonLabel\":\"Movies_searchFormButtonLabel__V8qQW\",\"searchResults\":\"Movies_searchResults__gnGNF\",\"searchItem\":\"Movies_searchItem__j+q9-\",\"title\":\"Movies_title__9RQRB\",\"rating\":\"Movies_rating__UL-a9\"};","import React, { useState, useEffect } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { API_KEY, BASE_URL, IMAGE_URL } from 'utils/constants';\nimport css from './Movies.module.css';\n\nexport function Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const navigate = useNavigate();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    navigate(`/movies?search=${searchQuery}`);\n  };\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      if (searchQuery) {\n        try {\n          const response = await fetch(\n            `${BASE_URL}/search/movie?include_adult=false&language=en-US&query=${searchQuery}&api_key=${API_KEY}`\n          );\n          const data = await response.json();\n          setMovies(data.results);\n        } catch (error) {\n          console.error('Error fetching movies:', error);\n        }\n      } else {\n        setMovies([]);\n      }\n    };\n\n    fetchMovies();\n  }, [searchQuery]);\n\n  return (\n    <div>\n      <div className={css.searchContainer}>\n        <form className={css.searchForm} onSubmit={handleSubmit}>\n          <input\n            className={css.searchFormInput}\n            type=\"text\"\n            value={searchQuery}\n            onChange={e => setSearchQuery(e.target.value)}\n            placeholder=\"Search for a movie...\"\n          />\n          <button className={css.searchFormButton} type=\"submit\">\n            <span className={css.searchFormButtonLabel}>Search</span>\n          </button>\n        </form>\n      </div>\n      <div className={css.searchResults}>\n        {movies.map(movie => (\n          <Link to={`/movies/${movie.id}`} key={movie.id}>\n            <div className={css.searchItem}>\n              <img\n                src={IMAGE_URL + movie.poster_path}\n                alt={movie.title}\n                width={400}\n              />\n              <h3 className={css.title}>\n                {movie.title || movie.name || movie.original_title}\n              </h3>\n              <p className={css.rating}>\n                <span>Rating: </span>\n                {movie.vote_average.toFixed(1)}\n              </p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Movies;\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Movies","useState","searchQuery","setSearchQuery","movies","setMovies","navigate","useNavigate","useEffect","fetchMovies","fetch","BASE_URL","API_KEY","response","json","data","results","console","error","className","css","onSubmit","event","preventDefault","type","value","onChange","e","target","placeholder","map","movie","to","id","src","IMAGE_URL","poster_path","alt","title","width","name","original_title","vote_average","toFixed","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}