{"version":3,"file":"static/js/457.2cc875d2.chunk.js","mappings":"0LACA,EAAkC,gCAAlC,EAA2E,uB,SCG5D,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKC,UAAWC,EAAhB,UACE,oBAAQD,UAAWC,EAAYC,KAAK,SAASC,QAN5B,WACnBL,GAAU,EACX,EAIG,WACE,qCADF,cAKL,C,mHCjBD,EAA8B,6BAA9B,EAA6E,iCAA7E,EAA8H,+B,SCK/G,SAASM,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAO,OAAIJ,EAAWI,EAAQC,QAAvB,GACxC,GAAE,CAACT,KAGF,iCACE,SAACU,EAAA,EAAD,IACCP,EAAQQ,OAAS,GAChB,eAAIhB,UAAWC,EAAf,SACGO,EAAQS,KAAI,SAAAC,GAAE,OACb,gBAAIlB,UAAWC,EAAf,WACE,0BACE,iBAAMD,UAAWC,EAAjB,sBACCiB,EAAGC,WAEN,uBAAID,EAAGE,YALgCF,EAAGG,GAD/B,OAWjB,eAAIrB,UAAWC,EAAf,2BAIP,C,uGClCD,IAAMqB,EAAU,mCACVC,EAAW,+BACXC,EAAY,iC,iMCEX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,+GAEeC,EAAAA,EAAAA,IAAA,UACbH,EAAAA,GADa,qCACwBD,EAAAA,KAHvC,cAEGK,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,4DATC,qFAeA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BzB,GAA7B,kGAEeqB,EAAAA,EAAAA,IAAA,UACbH,EAAAA,GADa,kBACKlB,EADL,oBACwBiB,EAAAA,GADxB,oBAFf,cAEGK,EAFH,OAKGC,EAAOD,EAAIC,KALd,kBAMIA,GANJ,sCAQHC,IAAAA,OAAAA,QACE,0DATC,qFA2BA,IAAME,EAAc,mCAAG,WAAM1B,GAAN,uFAE1B2B,QAAQC,IAAI,mCAAoC5B,GAFtB,SAGHqB,EAAAA,EAAAA,IAAA,UAClBH,EAAAA,GADkB,kBACAlB,EADA,4BAC2BiB,EAAAA,GAD3B,oBAHG,cAGpBY,EAHoB,OAM1BF,QAAQC,IAAI,qBAAsBC,GANR,kBAOnBA,EAASN,KAAKO,MAPK,sCAS1BH,QAAQI,MAAM,6BAAd,MACAP,IAAAA,OAAAA,QACE,uDAXwB,8DAAH,sDAiBpB,SAAelB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCN,GAAjC,uFACkBgC,MAAM,GAAD,OACvBd,EAAAA,GADuB,kBACLlB,EADK,4BACsBiB,EAAAA,GADtB,oBADvB,cACCY,EADD,gBAIQA,EAASI,OAJjB,0G","sources":["webpack://goit-react-hw-05-movies/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.js","utils/constants.js","utils/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttonContainer\":\"Button_buttonContainer__X5AJ-\",\"button\":\"Button_button__wiIYs\"};","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport css from './Button.module.css';\n\nexport default function GoBackButton() {\n  const navigate = useNavigate();\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div className={css.buttonContainer}>\n      <button className={css.button} type=\"button\" onClick={handleGoBack}>\n        <span>&larr;</span>GO BACK\n      </button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsListItem\":\"Reviews_reviewsListItem__FIdwO\",\"highlightText\":\"Reviews_highlightText__AFymy\"};","import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from '../../utils/requests';\nimport { useParams } from 'react-router-dom';\nimport Button from '../Button/Button';\nimport css from './Reviews.module.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(request => setReviews(request.results));\n  }, [movieId]);\n\n  return (\n    <>\n      <Button />\n      {reviews.length > 0 ? (\n        <ul className={css.reviewsList}>\n          {reviews.map(el => (\n            <li className={css.reviewsListItem} key={el.id}>\n              <p>\n                <span className={css.highlightText}>Author: </span>\n                {el.author}\n              </p>\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3 className={css.highlightText}> No reviews</h3>\n      )}\n    </>\n  );\n}\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch trending movies. Please try again later.'\n    );\n    throw error;\n  }\n}\n\nexport async function fetchMoviesId(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie details. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport async function fetchMovieSearch(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return res.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie search results. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport const fetchMovieCast = async movieId => {\n  try {\n    console.log('Fetching movie cast for movieId:', movieId);\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log('Response from API:', response);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    Notiflix.Notify.failure(\n      'Failed to fetch movie cast. Please try again later.'\n    );\n    throw error;\n  }\n};\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n"],"names":["GoBackButton","navigate","useNavigate","className","css","type","onClick","Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","request","results","Button","length","map","el","author","content","id","API_KEY","BASE_URL","IMAGE_URL","fetchTrendingMovies","axios","res","data","Notiflix","fetchMoviesId","fetchMovieCast","console","log","response","cast","error","fetch","json"],"sourceRoot":""}