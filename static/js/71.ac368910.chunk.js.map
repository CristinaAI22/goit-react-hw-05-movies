{"version":3,"file":"static/js/71.ac368910.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetailsContent/MovieDetailsContent.module.css?742d","components/MovieDetailsContent/MovieDetailsContent.js","pages/MovieDetails.js","utils/constants.js","utils/requests.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"filmContainer\":\"MovieDetailsContent_filmContainer__py7Z9\",\"detailsContainer\":\"MovieDetailsContent_detailsContainer__Kn0O4\",\"title\":\"MovieDetailsContent_title__NsrO4\",\"textCategory\":\"MovieDetailsContent_textCategory__nwxAc\",\"text\":\"MovieDetailsContent_text__d2e5X\",\"imageContainer\":\"MovieDetailsContent_imageContainer__VypPA\",\"image\":\"MovieDetailsContent_image__LefFm\",\"navContainer\":\"MovieDetailsContent_navContainer__oQs37\",\"navCategory\":\"MovieDetailsContent_navCategory__jWLRr\",\"buttonContainer\":\"MovieDetailsContent_buttonContainer__NFQY4\",\"button\":\"MovieDetailsContent_button__mZb9E\"};","import { Suspense, lazy } from 'react';\nimport { NavLink, Route, Routes } from 'react-router-dom';\nimport { IMAGE_URL } from 'utils/constants';\nimport css from '../MovieDetailsContent/MovieDetailsContent.module.css';\nimport Loader from 'utils/loader';\n\nconst Cast = lazy(() => import('../Cast'));\nconst Reviews = lazy(() => import('../Reviews'));\n\nconst MovieDetailsContent = ({ movie, onGoBack, movieId, locationValue }) => {\n  return (\n    <>\n      {movie && (\n        <div className={css.mainContainer}>\n          <div className={css.buttonContainer}>\n            <button className={css.button} type=\"button\" onClick={onGoBack}>\n              <span>&larr;</span>GO BACK\n            </button>\n          </div>\n\n          <div className={css.filmContainer}>\n            <div className={css.imageContainer}>\n              <img\n                className={css.image}\n                src={IMAGE_URL + movie.poster_path}\n                alt={movie.title}\n              />\n            </div>\n\n            <div className={css.detailsContainer}>\n              <h2 className={css.title}>\n                {movie.title || movie.name || movie.original_title}\n              </h2>\n              <p className={css.text}>\n                <span className={css.textCategory}>Rating: </span>\n                {movie.vote_average.toFixed(1)}\n              </p>\n              <p className={css.text}>\n                <span className={css.textCategory}>Overview: </span>\n                {movie.overview}\n              </p>\n              <p className={css.text}>\n                <span className={css.textCategory}>Genres: </span>\n                {movie.genres.map(genre => genre.name).join(' ')}\n              </p>\n            </div>\n          </div>\n          <div className={css.additionalContainer}>\n            <h3 className={css.title}>Additional information</h3>\n\n            <nav>\n              <NavLink\n                to={{\n                  pathname: `/movies/${movieId}/cast`,\n                  state: { from: locationValue },\n                }}\n              >\n                Cast\n              </NavLink>\n\n              <NavLink\n                to={{\n                  pathname: `/movies/${movieId}/reviews`,\n                  state: { from: locationValue },\n                }}\n              >\n                Reviews\n              </NavLink>\n            </nav>\n\n            <Suspense fallback={<Loader />}>\n              <Routes>\n                <Route\n                  path={`/movies/:movieId/cast`}\n                  element={<Cast movieId={movieId} />}\n                />\n\n                <Route\n                  path={`/movies/:movieID/reviews`}\n                  element={<Reviews movieId={movieId} />}\n                />\n              </Routes>\n            </Suspense>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetailsContent;\n","import { useState, useEffect } from 'react';\n\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchMoviesId } from 'utils/requests';\nimport MovieDetailsContent from 'components/MovieDetailsContent/MovieDetailsContent';\n\nexport default function MovieDetails() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  let locationValue = location.state;\n  if (location.state) {\n    locationValue = location.state.from;\n  }\n\n  useEffect(() => {\n    fetchMoviesId(movieId).then(movie => {\n      setMovie(movie);\n    });\n  }, [movieId]);\n\n  const onGoBack = () => {\n    if (!location.state) {\n      navigate('/');\n      return;\n    }\n    navigate(`${location.state.from.pathname}${location.state.from.search}`);\n  };\n\n  return (\n    <div>\n      <MovieDetailsContent\n        movie={movie}\n        onGoBack={onGoBack}\n        locationValue={locationValue}\n        movieId={movieId}\n      />\n    </div>\n  );\n}\n","const API_KEY = '53b2ac0d64cbeedea763734f4fe8a4ce';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\nexport { API_KEY, BASE_URL, IMAGE_URL };\n","import axios from 'axios';\nimport Notiflix from 'notiflix';\nimport { API_KEY, BASE_URL } from './constants';\n\nexport async function fetchTrendingMovies() {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/trending/all/day?api_key=${API_KEY}`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch trending movies. Please try again later.'\n    );\n    throw error;\n  }\n}\n\nexport async function fetchMoviesId(movieId) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    const data = res.data;\n    return data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie details. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport async function fetchMovieSearch(query) {\n  try {\n    const res = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return res.data;\n  } catch (error) {\n    Notiflix.Notify.failure(\n      'Failed to fetch movie search results. Please try again later.'\n    );\n    throw error;\n  }\n}\nexport const fetchMovieCast = async movieId => {\n  try {\n    console.log('Fetching movie cast for movieId:', movieId);\n    const response = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    console.log('Response from API:', response);\n    return response.data.cast;\n  } catch (error) {\n    console.error('Error fetching movie cast:', error);\n    Notiflix.Notify.failure(\n      'Failed to fetch movie cast. Please try again later.'\n    );\n    throw error;\n  }\n};\n\nexport async function fetchMovieReviews(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.json();\n}\n"],"names":["Cast","lazy","Reviews","movie","onGoBack","movieId","locationValue","className","css","type","onClick","src","IMAGE_URL","poster_path","alt","title","name","original_title","vote_average","toFixed","overview","genres","map","genre","join","to","pathname","state","from","Suspense","fallback","path","element","MovieDetails","navigate","useNavigate","location","useLocation","useParams","useState","setMovie","useEffect","fetchMoviesId","then","search","API_KEY","BASE_URL","fetchTrendingMovies","axios","res","data","Notiflix","fetchMovieCast","console","log","response","cast","error"],"sourceRoot":""}